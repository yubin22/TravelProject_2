<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC 
	"-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap>
 
 <cacheModel type="LRU" id="guestCashe">
 	<flushInterval hours="24"/>
 	<flushOnExecute statement="insertGuest"/>
 	<property name="size" value="10"/>
 </cacheModel>
 
 
 <!-- typeAlias : 해당 클래스에 별명 지정  -->
 <typeAlias alias="login" type="model.LoginDTO" />
 
 <resultMap class="login" id="loginResult"> <!-- queryForMap,List 사용위해 -->
 
	<result property="id" column="id" />  	 	
	<result property="pwd" column="pwd" />    	 	
	<result property="name" column="name" />    	 	
	<result property="birth" column="birth" />     	 	
	<result property="gender" column="gender" />     	 	
	<result property="mail" column="mail" />     	 	
	<result property="phone" column="phone" />     	 	
	<result property="address" column="address" />      	 	
	<result property="locationNum" column="location_num" /> 
	
 </resultMap>
 
 <!-- 읽기 -->
 <select id="getLogin" parameterClass="login" resultClass="login">
 	select * from member where id = #id#
 </select> 
 
 <!-- 쓰기 -->
 <insert id="insertLogin" parameterClass="login">
	 insert into member (id, pwd, name, birth, gender, mail, phone, address)
	 values (#id#, #pwd#, #name#, #birth#, #gender#, #mail#, #phone#, #address#)
 </insert>
 
 <!-- 수정 아이디, 생년월일, 성별 수정 불가 -->
 <update id = "updateLogin" parameterClass="login">
 	update member set pwd=#pwd#, name=#name#, mail=#mail#,  phone=#phone#, address=#address#
 	where id=#id#
 </update>
 
<!-- myList 삭제 -->
<delete id="deleteMyList" parameterClass="login">
	delete from saved_location where location_num= #locationNum#
</delete>
 
 <!-- 삭제 -->
 <delete id="deleteLogin" parameterClass="login">
	 delete from member where id = #id# and pwd = #pwd#
 </delete>
 
 <!-- 아이디 중복 검사 -->
 <select id="idCheck" parameterClass="login" resultClass="login">
 	select * from member where id = #id#
 </select> 
 
 <!-- 회원목록 -->
 <select id="getAllMember" parameterClass="login" resultMap="loginResult">
 	select * from member
 </select> 
 
</sqlMap>